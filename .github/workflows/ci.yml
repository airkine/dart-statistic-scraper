name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  GO111MODULE: "on"

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Required for git describe to work correctly

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          check-latest: true

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Cache binaries
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/bin
          key: ${{ runner.os }}-bin-${{ hashFiles('**/go.mod') }}
          restore-keys: |
            ${{ runner.os }}-bin-

      - name: Install golangci-lint
        run: |
          mkdir -p ${{ github.workspace }}/bin
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b ${{ github.workspace }}/bin v1.54.2
          echo "${{ github.workspace }}/bin" >> $GITHUB_PATH

      - name: Run linting
        run: |
          go fmt ./...
          go vet ./...
          golangci-lint run

      - name: Run tests
        run: go test -v ./...

      - name: Build
        run: |
          mkdir -p bin
          go build -ldflags "-X main.version=$(git describe --tags || echo 'dev')" -o ./bin/dart-scraper ./cmd/dart-scraper

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: myusername/dart-statistic-scraper
          tags: |
            type=semver,pattern={{version}}
            type=sha,format=short

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v3
        with:
          name: dart-scraper-binary
          path: ./bin/dart-scraper

  release:
    name: Release
    needs: ci
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          check-latest: true

      - name: Install GoReleaser
        run: |
          mkdir -p ${{ github.workspace }}/bin
          curl -sL https://git.io/goreleaser | bash -s -- --version=v1.18.2
          echo "${{ github.workspace }}/bin" >> $GITHUB_PATH

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}